{:exists ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :role (), :ping ({:size 1, :name "message", :type "string", :group nil, :parent-type nil, :optional nil}), :del ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :lmpop ({:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "left", :type "pure-token", :group "where", :parent-type "oneof", :optional nil, :token "LEFT"} {:size 1, :name "right", :type "pure-token", :group "where", :parent-type "oneof", :optional nil, :token "RIGHT"} {:size 2, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil, :token "COUNT"}), :bitfield_ro ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "encoding", :type "string", :group "get-block", :parent-type "block", :optional nil} {:size 1, :name "offset", :type "integer", :group "get-block", :parent-type "block", :optional nil}), :fcall_ro ({:size 1, :name "function", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "arg", :type "string", :group nil, :parent-type nil, :optional nil}), :zscan ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "cursor", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 2, :name "pattern", :type "pattern", :group nil, :parent-type nil, :optional nil, :token "MATCH"} {:size 2, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil, :token "COUNT"}), :zremrangebyrank ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "start", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "stop", :type "integer", :group nil, :parent-type nil, :optional nil}), :sunsubscribe ({:size 1, :name "shardchannel", :type "string", :group nil, :parent-type nil, :optional nil}), :lpushx ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "element", :type "string", :group nil, :parent-type nil, :optional nil}), :failover ({:size 1, :name "host", :type "string", :group "target", :parent-type "block", :optional nil} {:size 1, :name "port", :type "integer", :group "target", :parent-type "block", :optional nil} {:size 1, :name "force", :type "pure-token", :group "target", :parent-type "block", :optional nil, :token "FORCE"} {:size 1, :name "abort", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "ABORT"} {:size 2, :name "milliseconds", :type "integer", :group nil, :parent-type nil, :optional nil, :token "TIMEOUT"}), :georadius_ro ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "longitude", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "latitude", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "radius", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "m", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "M"} {:size 1, :name "km", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "KM"} {:size 1, :name "ft", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "FT"} {:size 1, :name "mi", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "MI"} {:size 1, :name "withcoord", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHCOORD"} {:size 1, :name "withdist", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHDIST"} {:size 1, :name "withhash", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHHASH"} {:size 2, :name "count", :type "integer", :group "count-block", :parent-type "block", :optional nil, :token "COUNT"} {:size 1, :name "any", :type "pure-token", :group "count-block", :parent-type "block", :optional nil, :token "ANY"} {:size 1, :name "asc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "ASC"} {:size 1, :name "desc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "DESC"}), :mget ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :bitcount ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "start", :type "integer", :group "range", :parent-type "block", :optional nil} {:size 1, :name "end", :type "integer", :group "range", :parent-type "block", :optional nil} {:size 1, :name "byte", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "BYTE"} {:size 1, :name "bit", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "BIT"}), :geoadd ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "nx", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "NX"} {:size 1, :name "xx", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "XX"} {:size 1, :name "change", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "CH"} {:size 1, :name "longitude", :type "double", :group "data", :parent-type "block", :optional nil} {:size 1, :name "latitude", :type "double", :group "data", :parent-type "block", :optional nil} {:size 1, :name "member", :type "string", :group "data", :parent-type "block", :optional nil}), :geopos ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member", :type "string", :group nil, :parent-type nil, :optional nil}), :getex ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 2, :name "seconds", :type "integer", :group "expiration", :parent-type "oneof", :optional nil, :token "EX"} {:size 2, :name "milliseconds", :type "integer", :group "expiration", :parent-type "oneof", :optional nil, :token "PX"} {:size 2, :name "unix-time-seconds", :type "unix-time", :group "expiration", :parent-type "oneof", :optional nil, :token "EXAT"} {:size 2, :name "unix-time-milliseconds", :type "unix-time", :group "expiration", :parent-type "oneof", :optional nil, :token "PXAT"} {:size 1, :name "persist", :type "pure-token", :group "expiration", :parent-type "oneof", :optional nil, :token "PERSIST"}), :randomkey (), :zunionstore ({:size 1, :name "destination", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 2, :name "weight", :type "integer", :group nil, :parent-type nil, :optional nil, :token "WEIGHTS"} {:size 1, :name "sum", :type "pure-token", :group "aggregate", :parent-type "oneof", :optional nil, :token "SUM"} {:size 1, :name "min", :type "pure-token", :group "aggregate", :parent-type "oneof", :optional nil, :token "MIN"} {:size 1, :name "max", :type "pure-token", :group "aggregate", :parent-type "oneof", :optional nil, :token "MAX"}), :get ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :ltrim ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "start", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "stop", :type "integer", :group nil, :parent-type nil, :optional nil}), :copy ({:size 1, :name "source", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "destination", :type "key", :group nil, :parent-type nil, :optional nil} {:size 2, :name "destination-db", :type "integer", :group nil, :parent-type nil, :optional nil, :token "DB"} {:size 1, :name "replace", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "REPLACE"}), :unsubscribe ({:size 1, :name "channel", :type "string", :group nil, :parent-type nil, :optional nil}), :sunionstore ({:size 1, :name "destination", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :slaveof ({:size 1, :name "host", :type "string", :group "host-port", :parent-type "block", :optional nil} {:size 1, :name "port", :type "integer", :group "host-port", :parent-type "block", :optional nil} {:size 1, :name "no", :type "pure-token", :group "no-one", :parent-type "block", :optional nil, :token "NO"} {:size 1, :name "one", :type "pure-token", :group "no-one", :parent-type "block", :optional nil, :token "ONE"}), :expireat ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "unix-time-seconds", :type "unix-time", :group nil, :parent-type nil, :optional nil} {:size 1, :name "nx", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "NX"} {:size 1, :name "xx", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "XX"} {:size 1, :name "gt", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "GT"} {:size 1, :name "lt", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "LT"}), :zdiff ({:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "withscores", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHSCORES"}), :zrevrank ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "withscore", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHSCORE"}), :smismember ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member", :type "string", :group nil, :parent-type nil, :optional nil}), :strlen ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :zpopmin ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil}), :lrange ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "start", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "stop", :type "integer", :group nil, :parent-type nil, :optional nil}), :hincrby ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "field", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "increment", :type "integer", :group nil, :parent-type nil, :optional nil}), :zrank ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "withscore", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHSCORE"}), :setrange ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "offset", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "value", :type "string", :group nil, :parent-type nil, :optional nil}), :bzpopmin ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "timeout", :type "double", :group nil, :parent-type nil, :optional nil}), :cluster (), :sismember ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member", :type "string", :group nil, :parent-type nil, :optional nil}), :sinterstore ({:size 1, :name "destination", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :flushall ({:size 1, :name "async", :type "pure-token", :group "flush-type", :parent-type "oneof", :optional nil, :token "ASYNC"} {:size 1, :name "sync", :type "pure-token", :group "flush-type", :parent-type "oneof", :optional nil, :token "SYNC"}), :hset ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "field", :type "string", :group "data", :parent-type "block", :optional nil} {:size 1, :name "value", :type "string", :group "data", :parent-type "block", :optional nil}), :expiretime ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :pttl ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :zincrby ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "increment", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member", :type "string", :group nil, :parent-type nil, :optional nil}), :xdel ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "id", :type "string", :group nil, :parent-type nil, :optional nil}), :zcard ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :hvals ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :blmove ({:size 1, :name "source", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "destination", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "left", :type "pure-token", :group "wherefrom", :parent-type "oneof", :optional nil, :token "LEFT"} {:size 1, :name "right", :type "pure-token", :group "wherefrom", :parent-type "oneof", :optional nil, :token "RIGHT"} {:size 1, :name "left", :type "pure-token", :group "whereto", :parent-type "oneof", :optional nil, :token "LEFT"} {:size 1, :name "right", :type "pure-token", :group "whereto", :parent-type "oneof", :optional nil, :token "RIGHT"} {:size 1, :name "timeout", :type "double", :group nil, :parent-type nil, :optional nil}), :incr ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :linsert ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "before", :type "pure-token", :group "where", :parent-type "oneof", :optional nil, :token "BEFORE"} {:size 1, :name "after", :type "pure-token", :group "where", :parent-type "oneof", :optional nil, :token "AFTER"} {:size 1, :name "pivot", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "element", :type "string", :group nil, :parent-type nil, :optional nil}), :reset (), :zintercard ({:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 2, :name "limit", :type "integer", :group nil, :parent-type nil, :optional nil, :token "LIMIT"}), :rpushx ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "element", :type "string", :group nil, :parent-type nil, :optional nil}), :script (), :pfcount ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :config (), :exec (), :zrangebylex ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "min", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "max", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "offset", :type "integer", :group "limit", :parent-type "block", :optional nil} {:size 1, :name "count", :type "integer", :group "limit", :parent-type "block", :optional nil}), :psubscribe ({:size 1, :name "pattern", :type "pattern", :group nil, :parent-type nil, :optional nil}), :geohash ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member", :type "string", :group nil, :parent-type nil, :optional nil}), :xsetid ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "last-id", :type "string", :group nil, :parent-type nil, :optional nil} {:size 2, :name "entries-added", :type "integer", :group nil, :parent-type nil, :optional nil, :token "ENTRIESADDED"} {:size 2, :name "max-deleted-id", :type "string", :group nil, :parent-type nil, :optional nil, :token "MAXDELETEDID"}), :sadd ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member", :type "string", :group nil, :parent-type nil, :optional nil}), :restore ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "ttl", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "serialized-value", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "replace", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "REPLACE"} {:size 1, :name "absttl", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "ABSTTL"} {:size 2, :name "seconds", :type "integer", :group nil, :parent-type nil, :optional nil, :token "IDLETIME"} {:size 2, :name "frequency", :type "integer", :group nil, :parent-type nil, :optional nil, :token "FREQ"}), :geodist ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member1", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member2", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "m", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "M"} {:size 1, :name "km", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "KM"} {:size 1, :name "ft", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "FT"} {:size 1, :name "mi", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "MI"}), :zadd ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "nx", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "NX"} {:size 1, :name "xx", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "XX"} {:size 1, :name "gt", :type "pure-token", :group "comparison", :parent-type "oneof", :optional nil, :token "GT"} {:size 1, :name "lt", :type "pure-token", :group "comparison", :parent-type "oneof", :optional nil, :token "LT"} {:size 1, :name "change", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "CH"} {:size 1, :name "increment", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "INCR"} {:size 1, :name "score", :type "double", :group "data", :parent-type "block", :optional nil} {:size 1, :name "member", :type "string", :group "data", :parent-type "block", :optional nil}), :scard ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :eval_ro ({:size 1, :name "script", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "arg", :type "string", :group nil, :parent-type nil, :optional nil}), :hscan ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "cursor", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 2, :name "pattern", :type "pattern", :group nil, :parent-type nil, :optional nil, :token "MATCH"} {:size 2, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil, :token "COUNT"}), :lolwut ({:size 2, :name "version", :type "integer", :group nil, :parent-type nil, :optional nil, :token "VERSION"}), :zcount ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "min", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "max", :type "double", :group nil, :parent-type nil, :optional nil}), :migrate ({:size 1, :name "host", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "port", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group "key-selector", :parent-type "oneof", :optional nil} {:size 1, :name "empty-string", :type "pure-token", :group "key-selector", :parent-type "oneof", :optional nil, :token ""} {:size 1, :name "destination-db", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "timeout", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "copy", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "COPY"} {:size 1, :name "replace", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "REPLACE"} {:size 2, :name "auth", :type "string", :group "authentication", :parent-type "oneof", :optional nil, :token "AUTH"} {:size 1, :name "username", :type "string", :group "auth2", :parent-type "block", :optional nil} {:size 1, :name "password", :type "string", :group "auth2", :parent-type "block", :optional nil} {:size 1, :name "keys", :type "key", :group nil, :parent-type nil, :optional nil, :token "KEYS"}), :readonly (), :time (), :geosearchstore ({:size 1, :name "destination", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "source", :type "key", :group nil, :parent-type nil, :optional nil} {:size 2, :name "member", :type "string", :group "from", :parent-type "oneof", :optional nil, :token "FROMMEMBER"} {:size 1, :name "longitude", :type "double", :group "fromlonlat", :parent-type "block", :optional nil} {:size 1, :name "latitude", :type "double", :group "fromlonlat", :parent-type "block", :optional nil} {:size 2, :name "radius", :type "double", :group "circle", :parent-type "block", :optional nil, :token "BYRADIUS"} {:size 1, :name "m", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "M"} {:size 1, :name "km", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "KM"} {:size 1, :name "ft", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "FT"} {:size 1, :name "mi", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "MI"} {:size 2, :name "width", :type "double", :group "box", :parent-type "block", :optional nil, :token "BYBOX"} {:size 1, :name "height", :type "double", :group "box", :parent-type "block", :optional nil} {:size 1, :name "m", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "M"} {:size 1, :name "km", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "KM"} {:size 1, :name "ft", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "FT"} {:size 1, :name "mi", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "MI"} {:size 1, :name "asc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "ASC"} {:size 1, :name "desc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "DESC"} {:size 2, :name "count", :type "integer", :group "count-block", :parent-type "block", :optional nil, :token "COUNT"} {:size 1, :name "any", :type "pure-token", :group "count-block", :parent-type "block", :optional nil, :token "ANY"} {:size 1, :name "storedist", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "STOREDIST"}), :substr ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "start", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "end", :type "integer", :group nil, :parent-type nil, :optional nil}), :sintercard ({:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 2, :name "limit", :type "integer", :group nil, :parent-type nil, :optional nil, :token "LIMIT"}), :hget ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "field", :type "string", :group nil, :parent-type nil, :optional nil}), :memory (), :append ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "value", :type "string", :group nil, :parent-type nil, :optional nil}), :client (), :hello ({:size 1, :name "protover", :type "integer", :group "arguments", :parent-type "block", :optional nil} {:size 1, :name "username", :type "string", :group "auth", :parent-type "block", :optional nil} {:size 1, :name "password", :type "string", :group "auth", :parent-type "block", :optional nil} {:size 2, :name "clientname", :type "string", :group "arguments", :parent-type "block", :optional nil, :token "SETNAME"}), :move ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "db", :type "integer", :group nil, :parent-type nil, :optional nil}), :hexists ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "field", :type "string", :group nil, :parent-type nil, :optional nil}), :renamenx ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "newkey", :type "key", :group nil, :parent-type nil, :optional nil}), :lpos ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "element", :type "string", :group nil, :parent-type nil, :optional nil} {:size 2, :name "rank", :type "integer", :group nil, :parent-type nil, :optional nil, :token "RANK"} {:size 2, :name "num-matches", :type "integer", :group nil, :parent-type nil, :optional nil, :token "COUNT"} {:size 2, :name "len", :type "integer", :group nil, :parent-type nil, :optional nil, :token "MAXLEN"}), :hmget ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "field", :type "string", :group nil, :parent-type nil, :optional nil}), :lset ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "index", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "element", :type "string", :group nil, :parent-type nil, :optional nil}), :lindex ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "index", :type "integer", :group nil, :parent-type nil, :optional nil}), :command (), :persist ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :getset ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "value", :type "string", :group nil, :parent-type nil, :optional nil}), :swapdb ({:size 1, :name "index1", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "index2", :type "integer", :group nil, :parent-type nil, :optional nil}), :zrem ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member", :type "string", :group nil, :parent-type nil, :optional nil}), :type ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :xautoclaim ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "group", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "consumer", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "min-idle-time", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "start", :type "string", :group nil, :parent-type nil, :optional nil} {:size 2, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil, :token "COUNT"} {:size 1, :name "justid", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "JUSTID"}), :setnx ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "value", :type "string", :group nil, :parent-type nil, :optional nil}), :expire ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "seconds", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "nx", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "NX"} {:size 1, :name "xx", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "XX"} {:size 1, :name "gt", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "GT"} {:size 1, :name "lt", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "LT"}), :debug (), :srandmember ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil}), :rename ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "newkey", :type "key", :group nil, :parent-type nil, :optional nil}), :georadiusbymember ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "radius", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "m", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "M"} {:size 1, :name "km", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "KM"} {:size 1, :name "ft", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "FT"} {:size 1, :name "mi", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "MI"} {:size 1, :name "withcoord", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHCOORD"} {:size 1, :name "withdist", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHDIST"} {:size 1, :name "withhash", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHHASH"} {:size 2, :name "count", :type "integer", :group "count-block", :parent-type "block", :optional nil, :token "COUNT"} {:size 1, :name "any", :type "pure-token", :group "count-block", :parent-type "block", :optional nil, :token "ANY"} {:size 1, :name "asc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "ASC"} {:size 1, :name "desc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "DESC"} {:size 1, :name "storekey", :type "key", :group "store", :parent-type "oneof", :optional nil, :token "STORE"} {:size 1, :name "storedistkey", :type "key", :group "store", :parent-type "oneof", :optional nil, :token "STOREDIST"}), :unwatch (), :dbsize (), :lcs ({:size 1, :name "key1", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key2", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "len", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "LEN"} {:size 1, :name "idx", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "IDX"} {:size 2, :name "min-match-len", :type "integer", :group nil, :parent-type nil, :optional nil, :token "MINMATCHLEN"} {:size 1, :name "withmatchlen", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHMATCHLEN"}), :pfadd ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "element", :type "string", :group nil, :parent-type nil, :optional nil}), :bgsave ({:size 1, :name "schedule", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "SCHEDULE"}), :save (), :replicaof ({:size 1, :name "host", :type "string", :group "host-port", :parent-type "block", :optional nil} {:size 1, :name "port", :type "integer", :group "host-port", :parent-type "block", :optional nil} {:size 1, :name "no", :type "pure-token", :group "no-one", :parent-type "block", :optional nil, :token "NO"} {:size 1, :name "one", :type "pure-token", :group "no-one", :parent-type "block", :optional nil, :token "ONE"}), :smembers ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :bitpos ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "bit", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "start", :type "integer", :group "range", :parent-type "block", :optional nil} {:size 1, :name "end", :type "integer", :group "end-unit-block", :parent-type "block", :optional nil} {:size 1, :name "byte", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "BYTE"} {:size 1, :name "bit", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "BIT"}), :hincrbyfloat ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "field", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "increment", :type "double", :group nil, :parent-type nil, :optional nil}), :bitop ({:size 1, :name "and", :type "pure-token", :group "operation", :parent-type "oneof", :optional nil, :token "AND"} {:size 1, :name "or", :type "pure-token", :group "operation", :parent-type "oneof", :optional nil, :token "OR"} {:size 1, :name "xor", :type "pure-token", :group "operation", :parent-type "oneof", :optional nil, :token "XOR"} {:size 1, :name "not", :type "pure-token", :group "operation", :parent-type "oneof", :optional nil, :token "NOT"} {:size 1, :name "destkey", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :sync (), :auth ({:size 1, :name "username", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "password", :type "string", :group nil, :parent-type nil, :optional nil}), :xpending ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "group", :type "string", :group nil, :parent-type nil, :optional nil} {:size 2, :name "min-idle-time", :type "integer", :group "filters", :parent-type "block", :optional nil, :token "IDLE"} {:size 1, :name "start", :type "string", :group "filters", :parent-type "block", :optional nil} {:size 1, :name "end", :type "string", :group "filters", :parent-type "block", :optional nil} {:size 1, :name "count", :type "integer", :group "filters", :parent-type "block", :optional nil} {:size 1, :name "consumer", :type "string", :group "filters", :parent-type "block", :optional nil}), :sort_ro ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 2, :name "by-pattern", :type "pattern", :group nil, :parent-type nil, :optional nil, :token "BY"} {:size 1, :name "offset", :type "integer", :group "limit", :parent-type "block", :optional nil} {:size 1, :name "count", :type "integer", :group "limit", :parent-type "block", :optional nil} {:size 2, :name "get-pattern", :type "pattern", :group nil, :parent-type nil, :optional nil, :token "GET"} {:size 1, :name "asc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "ASC"} {:size 1, :name "desc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "DESC"} {:size 1, :name "sorting", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "ALPHA"}), :srem ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member", :type "string", :group nil, :parent-type nil, :optional nil}), :function (), :xadd ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "nomkstream", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "NOMKSTREAM"} {:size 1, :name "maxlen", :type "pure-token", :group "strategy", :parent-type "oneof", :optional nil, :token "MAXLEN"} {:size 1, :name "minid", :type "pure-token", :group "strategy", :parent-type "oneof", :optional nil, :token "MINID"} {:size 1, :name "equal", :type "pure-token", :group "operator", :parent-type "oneof", :optional nil, :token "="} {:size 1, :name "approximately", :type "pure-token", :group "operator", :parent-type "oneof", :optional nil, :token "~"} {:size 1, :name "threshold", :type "string", :group "trim", :parent-type "block", :optional nil} {:size 2, :name "count", :type "integer", :group "trim", :parent-type "block", :optional nil, :token "LIMIT"} {:size 1, :name "auto-id", :type "pure-token", :group "id-selector", :parent-type "oneof", :optional nil, :token "*"} {:size 1, :name "id", :type "string", :group "id-selector", :parent-type "oneof", :optional nil} {:size 1, :name "field", :type "string", :group "data", :parent-type "block", :optional nil} {:size 1, :name "value", :type "string", :group "data", :parent-type "block", :optional nil}), :zremrangebylex ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "min", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "max", :type "string", :group nil, :parent-type nil, :optional nil}), :hkeys ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :evalsha_ro ({:size 1, :name "sha1", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "arg", :type "string", :group nil, :parent-type nil, :optional nil}), :module (), :zrandmember ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "count", :type "integer", :group "options", :parent-type "block", :optional nil} {:size 1, :name "withscores", :type "pure-token", :group "options", :parent-type "block", :optional nil, :token "WITHSCORES"}), :xrevrange ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "end", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "start", :type "string", :group nil, :parent-type nil, :optional nil} {:size 2, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil, :token "COUNT"}), :xclaim ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "group", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "consumer", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "min-idle-time", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "id", :type "string", :group nil, :parent-type nil, :optional nil} {:size 2, :name "ms", :type "integer", :group nil, :parent-type nil, :optional nil, :token "IDLE"} {:size 2, :name "unix-time-milliseconds", :type "unix-time", :group nil, :parent-type nil, :optional nil, :token "TIME"} {:size 2, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil, :token "RETRYCOUNT"} {:size 1, :name "force", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "FORCE"} {:size 1, :name "justid", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "JUSTID"} {:size 2, :name "lastid", :type "string", :group nil, :parent-type nil, :optional nil, :token "LASTID"}), :zlexcount ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "min", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "max", :type "string", :group nil, :parent-type nil, :optional nil}), :incrbyfloat ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "increment", :type "double", :group nil, :parent-type nil, :optional nil}), :rpush ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "element", :type "string", :group nil, :parent-type nil, :optional nil}), :blmpop ({:size 1, :name "timeout", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "left", :type "pure-token", :group "where", :parent-type "oneof", :optional nil, :token "LEFT"} {:size 1, :name "right", :type "pure-token", :group "where", :parent-type "oneof", :optional nil, :token "RIGHT"} {:size 2, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil, :token "COUNT"}), :xreadgroup ({:size 1, :name "group", :type "string", :group "group-block", :parent-type "block", :optional nil} {:size 1, :name "consumer", :type "string", :group "group-block", :parent-type "block", :optional nil} {:size 2, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil, :token "COUNT"} {:size 2, :name "milliseconds", :type "integer", :group nil, :parent-type nil, :optional nil, :token "BLOCK"} {:size 1, :name "noack", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "NOACK"} {:size 1, :name "key", :type "key", :group "streams", :parent-type "block", :optional nil} {:size 1, :name "id", :type "string", :group "streams", :parent-type "block", :optional nil}), :sinter ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :sunion ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :pfselftest (), :echo ({:size 1, :name "message", :type "string", :group nil, :parent-type nil, :optional nil}), :llen ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :pexpire ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "milliseconds", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "nx", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "NX"} {:size 1, :name "xx", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "XX"} {:size 1, :name "gt", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "GT"} {:size 1, :name "lt", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "LT"}), :ttl ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :geosearch ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 2, :name "member", :type "string", :group "from", :parent-type "oneof", :optional nil, :token "FROMMEMBER"} {:size 1, :name "longitude", :type "double", :group "fromlonlat", :parent-type "block", :optional nil} {:size 1, :name "latitude", :type "double", :group "fromlonlat", :parent-type "block", :optional nil} {:size 2, :name "radius", :type "double", :group "circle", :parent-type "block", :optional nil, :token "BYRADIUS"} {:size 1, :name "m", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "M"} {:size 1, :name "km", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "KM"} {:size 1, :name "ft", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "FT"} {:size 1, :name "mi", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "MI"} {:size 2, :name "width", :type "double", :group "box", :parent-type "block", :optional nil, :token "BYBOX"} {:size 1, :name "height", :type "double", :group "box", :parent-type "block", :optional nil} {:size 1, :name "m", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "M"} {:size 1, :name "km", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "KM"} {:size 1, :name "ft", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "FT"} {:size 1, :name "mi", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "MI"} {:size 1, :name "asc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "ASC"} {:size 1, :name "desc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "DESC"} {:size 2, :name "count", :type "integer", :group "count-block", :parent-type "block", :optional nil, :token "COUNT"} {:size 1, :name "any", :type "pure-token", :group "count-block", :parent-type "block", :optional nil, :token "ANY"} {:size 1, :name "withcoord", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHCOORD"} {:size 1, :name "withdist", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHDIST"} {:size 1, :name "withhash", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHHASH"}), :xlen ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :hrandfield ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "count", :type "integer", :group "options", :parent-type "block", :optional nil} {:size 1, :name "withvalues", :type "pure-token", :group "options", :parent-type "block", :optional nil, :token "WITHVALUES"}), :keys ({:size 1, :name "pattern", :type "pattern", :group nil, :parent-type nil, :optional nil}), :georadius ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "longitude", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "latitude", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "radius", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "m", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "M"} {:size 1, :name "km", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "KM"} {:size 1, :name "ft", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "FT"} {:size 1, :name "mi", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "MI"} {:size 1, :name "withcoord", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHCOORD"} {:size 1, :name "withdist", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHDIST"} {:size 1, :name "withhash", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHHASH"} {:size 2, :name "count", :type "integer", :group "count-block", :parent-type "block", :optional nil, :token "COUNT"} {:size 1, :name "any", :type "pure-token", :group "count-block", :parent-type "block", :optional nil, :token "ANY"} {:size 1, :name "asc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "ASC"} {:size 1, :name "desc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "DESC"} {:size 1, :name "storekey", :type "key", :group "store", :parent-type "oneof", :optional nil, :token "STORE"} {:size 1, :name "storedistkey", :type "key", :group "store", :parent-type "oneof", :optional nil, :token "STOREDIST"}), :hsetnx ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "field", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "value", :type "string", :group nil, :parent-type nil, :optional nil}), :sscan ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "cursor", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 2, :name "pattern", :type "pattern", :group nil, :parent-type nil, :optional nil, :token "MATCH"} {:size 2, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil, :token "COUNT"}), :bzmpop ({:size 1, :name "timeout", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "min", :type "pure-token", :group "where", :parent-type "oneof", :optional nil, :token "MIN"} {:size 1, :name "max", :type "pure-token", :group "where", :parent-type "oneof", :optional nil, :token "MAX"} {:size 2, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil, :token "COUNT"}), :xinfo (), :pexpireat ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "unix-time-milliseconds", :type "unix-time", :group nil, :parent-type nil, :optional nil} {:size 1, :name "nx", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "NX"} {:size 1, :name "xx", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "XX"} {:size 1, :name "gt", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "GT"} {:size 1, :name "lt", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "LT"}), :slowlog (), :hlen ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :zrevrangebylex ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "max", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "min", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "offset", :type "integer", :group "limit", :parent-type "block", :optional nil} {:size 1, :name "count", :type "integer", :group "limit", :parent-type "block", :optional nil}), :decrby ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "decrement", :type "integer", :group nil, :parent-type nil, :optional nil}), :lmove ({:size 1, :name "source", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "destination", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "left", :type "pure-token", :group "wherefrom", :parent-type "oneof", :optional nil, :token "LEFT"} {:size 1, :name "right", :type "pure-token", :group "wherefrom", :parent-type "oneof", :optional nil, :token "RIGHT"} {:size 1, :name "left", :type "pure-token", :group "whereto", :parent-type "oneof", :optional nil, :token "LEFT"} {:size 1, :name "right", :type "pure-token", :group "whereto", :parent-type "oneof", :optional nil, :token "RIGHT"}), :xgroup (), :lpush ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "element", :type "string", :group nil, :parent-type nil, :optional nil}), :spublish ({:size 1, :name "shardchannel", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "message", :type "string", :group nil, :parent-type nil, :optional nil}), :getrange ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "start", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "end", :type "integer", :group nil, :parent-type nil, :optional nil}), :msetnx ({:size 1, :name "key", :type "key", :group "data", :parent-type "block", :optional nil} {:size 1, :name "value", :type "string", :group "data", :parent-type "block", :optional nil}), :restore-asking ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "ttl", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "serialized-value", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "replace", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "REPLACE"} {:size 1, :name "absttl", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "ABSTTL"} {:size 2, :name "seconds", :type "integer", :group nil, :parent-type nil, :optional nil, :token "IDLETIME"} {:size 2, :name "frequency", :type "integer", :group nil, :parent-type nil, :optional nil, :token "FREQ"}), :georadiusbymember_ro ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "radius", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "m", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "M"} {:size 1, :name "km", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "KM"} {:size 1, :name "ft", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "FT"} {:size 1, :name "mi", :type "pure-token", :group "unit", :parent-type "oneof", :optional nil, :token "MI"} {:size 1, :name "withcoord", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHCOORD"} {:size 1, :name "withdist", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHDIST"} {:size 1, :name "withhash", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHHASH"} {:size 2, :name "count", :type "integer", :group "count-block", :parent-type "block", :optional nil, :token "COUNT"} {:size 1, :name "any", :type "pure-token", :group "count-block", :parent-type "block", :optional nil, :token "ANY"} {:size 1, :name "asc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "ASC"} {:size 1, :name "desc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "DESC"}), :blpop ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "timeout", :type "double", :group nil, :parent-type nil, :optional nil}), :multi (), :lpop ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil}), :replconf (), :zpopmax ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil}), :monitor (), :psync ({:size 1, :name "replicationid", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "offset", :type "integer", :group nil, :parent-type nil, :optional nil}), :latency (), :asking (), :touch ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :zdiffstore ({:size 1, :name "destination", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :watch ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :smove ({:size 1, :name "source", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "destination", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member", :type "string", :group nil, :parent-type nil, :optional nil}), :punsubscribe ({:size 1, :name "pattern", :type "pattern", :group nil, :parent-type nil, :optional nil}), :info ({:size 1, :name "section", :type "string", :group nil, :parent-type nil, :optional nil}), :lastsave (), :zrevrange ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "start", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "stop", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "withscores", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHSCORES"}), :sdiffstore ({:size 1, :name "destination", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :zinter ({:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 2, :name "weight", :type "integer", :group nil, :parent-type nil, :optional nil, :token "WEIGHTS"} {:size 1, :name "sum", :type "pure-token", :group "aggregate", :parent-type "oneof", :optional nil, :token "SUM"} {:size 1, :name "min", :type "pure-token", :group "aggregate", :parent-type "oneof", :optional nil, :token "MIN"} {:size 1, :name "max", :type "pure-token", :group "aggregate", :parent-type "oneof", :optional nil, :token "MAX"} {:size 1, :name "withscores", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHSCORES"}), :zrangebyscore ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "min", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "max", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "withscores", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHSCORES"} {:size 1, :name "offset", :type "integer", :group "limit", :parent-type "block", :optional nil} {:size 1, :name "count", :type "integer", :group "limit", :parent-type "block", :optional nil}), :acl (), :evalsha ({:size 1, :name "sha1", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "arg", :type "string", :group nil, :parent-type nil, :optional nil}), :wait ({:size 1, :name "numreplicas", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "timeout", :type "integer", :group nil, :parent-type nil, :optional nil}), :brpop ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "timeout", :type "double", :group nil, :parent-type nil, :optional nil}), :sdiff ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :discard (), :hstrlen ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "field", :type "string", :group nil, :parent-type nil, :optional nil}), :flushdb ({:size 1, :name "async", :type "pure-token", :group "flush-type", :parent-type "oneof", :optional nil, :token "ASYNC"} {:size 1, :name "sync", :type "pure-token", :group "flush-type", :parent-type "oneof", :optional nil, :token "SYNC"}), :zrevrangebyscore ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "max", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "min", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "withscores", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHSCORES"} {:size 1, :name "offset", :type "integer", :group "limit", :parent-type "block", :optional nil} {:size 1, :name "count", :type "integer", :group "limit", :parent-type "block", :optional nil}), :lrem ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "element", :type "string", :group nil, :parent-type nil, :optional nil}), :setbit ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "offset", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "value", :type "integer", :group nil, :parent-type nil, :optional nil}), :ssubscribe ({:size 1, :name "shardchannel", :type "string", :group nil, :parent-type nil, :optional nil}), :spop ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil}), :scan ({:size 1, :name "cursor", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 2, :name "pattern", :type "pattern", :group nil, :parent-type nil, :optional nil, :token "MATCH"} {:size 2, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil, :token "COUNT"} {:size 2, :name "type", :type "string", :group nil, :parent-type nil, :optional nil, :token "TYPE"}), :zunion ({:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 2, :name "weight", :type "integer", :group nil, :parent-type nil, :optional nil, :token "WEIGHTS"} {:size 1, :name "sum", :type "pure-token", :group "aggregate", :parent-type "oneof", :optional nil, :token "SUM"} {:size 1, :name "min", :type "pure-token", :group "aggregate", :parent-type "oneof", :optional nil, :token "MIN"} {:size 1, :name "max", :type "pure-token", :group "aggregate", :parent-type "oneof", :optional nil, :token "MAX"} {:size 1, :name "withscores", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHSCORES"}), :incrby ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "increment", :type "integer", :group nil, :parent-type nil, :optional nil}), :zmscore ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member", :type "string", :group nil, :parent-type nil, :optional nil}), :rpop ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil}), :zrangestore ({:size 1, :name "dst", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "src", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "min", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "max", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "byscore", :type "pure-token", :group "sortby", :parent-type "oneof", :optional nil, :token "BYSCORE"} {:size 1, :name "bylex", :type "pure-token", :group "sortby", :parent-type "oneof", :optional nil, :token "BYLEX"} {:size 1, :name "rev", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "REV"} {:size 1, :name "offset", :type "integer", :group "limit", :parent-type "block", :optional nil} {:size 1, :name "count", :type "integer", :group "limit", :parent-type "block", :optional nil}), :zrange ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "start", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "stop", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "byscore", :type "pure-token", :group "sortby", :parent-type "oneof", :optional nil, :token "BYSCORE"} {:size 1, :name "bylex", :type "pure-token", :group "sortby", :parent-type "oneof", :optional nil, :token "BYLEX"} {:size 1, :name "rev", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "REV"} {:size 1, :name "offset", :type "integer", :group "limit", :parent-type "block", :optional nil} {:size 1, :name "count", :type "integer", :group "limit", :parent-type "block", :optional nil} {:size 1, :name "withscores", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "WITHSCORES"}), :zremrangebyscore ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "min", :type "double", :group nil, :parent-type nil, :optional nil} {:size 1, :name "max", :type "double", :group nil, :parent-type nil, :optional nil}), :mset ({:size 1, :name "key", :type "key", :group "data", :parent-type "block", :optional nil} {:size 1, :name "value", :type "string", :group "data", :parent-type "block", :optional nil}), :bitfield ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "encoding", :type "string", :group "get-block", :parent-type "block", :optional nil} {:size 1, :name "offset", :type "integer", :group "get-block", :parent-type "block", :optional nil} {:size 1, :name "wrap", :type "pure-token", :group "overflow-block", :parent-type "oneof", :optional nil, :token "WRAP"} {:size 1, :name "sat", :type "pure-token", :group "overflow-block", :parent-type "oneof", :optional nil, :token "SAT"} {:size 1, :name "fail", :type "pure-token", :group "overflow-block", :parent-type "oneof", :optional nil, :token "FAIL"} {:size 1, :name "encoding", :type "string", :group "set-block", :parent-type "block", :optional nil} {:size 1, :name "offset", :type "integer", :group "set-block", :parent-type "block", :optional nil} {:size 1, :name "value", :type "integer", :group "set-block", :parent-type "block", :optional nil} {:size 1, :name "encoding", :type "string", :group "incrby-block", :parent-type "block", :optional nil} {:size 1, :name "offset", :type "integer", :group "incrby-block", :parent-type "block", :optional nil} {:size 1, :name "increment", :type "integer", :group "incrby-block", :parent-type "block", :optional nil}), :readwrite (), :rpoplpush ({:size 1, :name "source", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "destination", :type "key", :group nil, :parent-type nil, :optional nil}), :quit (), :setex ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "seconds", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "value", :type "string", :group nil, :parent-type nil, :optional nil}), :set ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "value", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "nx", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "NX"} {:size 1, :name "xx", :type "pure-token", :group "condition", :parent-type "oneof", :optional nil, :token "XX"} {:size 1, :name "get", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "GET"} {:size 2, :name "seconds", :type "integer", :group "expiration", :parent-type "oneof", :optional nil, :token "EX"} {:size 2, :name "milliseconds", :type "integer", :group "expiration", :parent-type "oneof", :optional nil, :token "PX"} {:size 2, :name "unix-time-seconds", :type "unix-time", :group "expiration", :parent-type "oneof", :optional nil, :token "EXAT"} {:size 2, :name "unix-time-milliseconds", :type "unix-time", :group "expiration", :parent-type "oneof", :optional nil, :token "PXAT"} {:size 1, :name "keepttl", :type "pure-token", :group "expiration", :parent-type "oneof", :optional nil, :token "KEEPTTL"}), :zscore ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "member", :type "string", :group nil, :parent-type nil, :optional nil}), :xrange ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "start", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "end", :type "string", :group nil, :parent-type nil, :optional nil} {:size 2, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil, :token "COUNT"}), :brpoplpush ({:size 1, :name "source", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "destination", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "timeout", :type "double", :group nil, :parent-type nil, :optional nil}), :pfdebug ({:size 1, :name "subcommand", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :xtrim ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "maxlen", :type "pure-token", :group "strategy", :parent-type "oneof", :optional nil, :token "MAXLEN"} {:size 1, :name "minid", :type "pure-token", :group "strategy", :parent-type "oneof", :optional nil, :token "MINID"} {:size 1, :name "equal", :type "pure-token", :group "operator", :parent-type "oneof", :optional nil, :token "="} {:size 1, :name "approximately", :type "pure-token", :group "operator", :parent-type "oneof", :optional nil, :token "~"} {:size 1, :name "threshold", :type "string", :group "trim", :parent-type "block", :optional nil} {:size 2, :name "count", :type "integer", :group "trim", :parent-type "block", :optional nil, :token "LIMIT"}), :zmpop ({:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "min", :type "pure-token", :group "where", :parent-type "oneof", :optional nil, :token "MIN"} {:size 1, :name "max", :type "pure-token", :group "where", :parent-type "oneof", :optional nil, :token "MAX"} {:size 2, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil, :token "COUNT"}), :dump ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :xack ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "group", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "id", :type "string", :group nil, :parent-type nil, :optional nil}), :bzpopmax ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "timeout", :type "double", :group nil, :parent-type nil, :optional nil}), :hmset ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "field", :type "string", :group "data", :parent-type "block", :optional nil} {:size 1, :name "value", :type "string", :group "data", :parent-type "block", :optional nil}), :subscribe ({:size 1, :name "channel", :type "string", :group nil, :parent-type nil, :optional nil}), :hgetall ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :getbit ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "offset", :type "integer", :group nil, :parent-type nil, :optional nil}), :bgrewriteaof (), :unlink ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :hdel ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "field", :type "string", :group nil, :parent-type nil, :optional nil}), :object (), :pexpiretime ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :decr ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :sort ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 2, :name "by-pattern", :type "pattern", :group nil, :parent-type nil, :optional nil, :token "BY"} {:size 1, :name "offset", :type "integer", :group "limit", :parent-type "block", :optional nil} {:size 1, :name "count", :type "integer", :group "limit", :parent-type "block", :optional nil} {:size 2, :name "get-pattern", :type "pattern", :group nil, :parent-type nil, :optional nil, :token "GET"} {:size 1, :name "asc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "ASC"} {:size 1, :name "desc", :type "pure-token", :group "order", :parent-type "oneof", :optional nil, :token "DESC"} {:size 1, :name "sorting", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "ALPHA"} {:size 1, :name "destination", :type "key", :group nil, :parent-type nil, :optional nil, :token "STORE"}), :publish ({:size 1, :name "channel", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "message", :type "string", :group nil, :parent-type nil, :optional nil}), :zinterstore ({:size 1, :name "destination", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 2, :name "weight", :type "integer", :group nil, :parent-type nil, :optional nil, :token "WEIGHTS"} {:size 1, :name "sum", :type "pure-token", :group "aggregate", :parent-type "oneof", :optional nil, :token "SUM"} {:size 1, :name "min", :type "pure-token", :group "aggregate", :parent-type "oneof", :optional nil, :token "MIN"} {:size 1, :name "max", :type "pure-token", :group "aggregate", :parent-type "oneof", :optional nil, :token "MAX"}), :waitaof ({:size 1, :name "numlocal", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "numreplicas", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "timeout", :type "integer", :group nil, :parent-type nil, :optional nil}), :pubsub (), :shutdown ({:size 1, :name "nosave", :type "pure-token", :group "save-selector", :parent-type "oneof", :optional nil, :token "NOSAVE"} {:size 1, :name "save", :type "pure-token", :group "save-selector", :parent-type "oneof", :optional nil, :token "SAVE"} {:size 1, :name "now", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "NOW"} {:size 1, :name "force", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "FORCE"} {:size 1, :name "abort", :type "pure-token", :group nil, :parent-type nil, :optional nil, :token "ABORT"}), :getdel ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil}), :select ({:size 1, :name "index", :type "integer", :group nil, :parent-type nil, :optional nil}), :xread ({:size 2, :name "count", :type "integer", :group nil, :parent-type nil, :optional nil, :token "COUNT"} {:size 2, :name "milliseconds", :type "integer", :group nil, :parent-type nil, :optional nil, :token "BLOCK"} {:size 1, :name "key", :type "key", :group "streams", :parent-type "block", :optional nil} {:size 1, :name "id", :type "string", :group "streams", :parent-type "block", :optional nil}), :psetex ({:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "milliseconds", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "value", :type "string", :group nil, :parent-type nil, :optional nil}), :fcall ({:size 1, :name "function", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "arg", :type "string", :group nil, :parent-type nil, :optional nil}), :pfmerge ({:size 1, :name "destkey", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "sourcekey", :type "key", :group nil, :parent-type nil, :optional nil}), :eval ({:size 1, :name "script", :type "string", :group nil, :parent-type nil, :optional nil} {:size 1, :name "numkeys", :type "integer", :group nil, :parent-type nil, :optional nil} {:size 1, :name "key", :type "key", :group nil, :parent-type nil, :optional nil} {:size 1, :name "arg", :type "string", :group nil, :parent-type nil, :optional nil})}